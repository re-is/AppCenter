<!DOCTYPE html>
<html lang="HU">
	<head>
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=Edge">
		<script type="text/javascript" src="https://cdn.rawgit.com/re-is/ScriptCenter/main/js/shl-script-loader.js" link="https://raw.githubusercontent.com/re-is/shl.min/main/shl.220511.min.js"></script>
		<script type="text/javascript">try{window.shl = new SuperHtaLibrary()}catch(e){window.alert("Nincs internet kapcsolat!");window.close()}</script>
		<style type="text/css">

			html * {
				font-family: "Tahoma", sans-serif;
				font-size: 2vw;
				color: #333;
			}

			#Application {
				position: fixed;
				overflow: hidden;
				display: inline-flex;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background-color: #fff;
			}

			.apps-blocks {
				width: 50%;
				margin: 0.5vw;
			}

				.titles {
					height: 3vw;
					line-height: 3vw;
					padding-left: 1vw;
					margin-bottom: 0.5vw;
					background-color: #ddd;
					border-radius: 0.5vw;
					font-family: "Ebrima";
					font-weight: bold;
				}

				.app-items {
					padding-left: 1vw;
					border-radius: 0.5vw;
					height: 3vw;
					line-height: 3vw;
					cursor: pointer;
					transition: 100ms;
				}

					.app-version {
						color: #777;
						font-style: italic;
						float: right;
						padding-right: 1vw;
					}

					.app-items:hover { color: #fff; background-color: #555 }
					.app-items:hover .app-version { color: #fff }

				.operators {
					display: inline-block;
					width: 15px;
					height: 100%;
					line-height: 100%;
					text-align: center;
					margin-right: 0.5vw;
					font-family: "Ebrima";
					font-weight: bold;
					font-size: 2.2vw;
					color: #d32;
				}

			#check-list {
				position: fixed;
				left: 1vw;
				bottom: 1vw;
				padding: 0.5vw 1vw;
				background-color: #3a5;
				color: #fff;
				border-radius: 0.5vw;
				cursor: pointer;
				transition: 100ms;
			}	#check-list:hover { background-color: #555 }

			#overlay {
				position: absolute;
				display: none;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgba(200,200,200,0.4);
			}

		</style>
	</head>
	<body>
		<div id="Application">
			<div class="apps-blocks usb-apps"><div class="titles">USB</div></div>
			<div class="apps-blocks web-apps"><div class="titles">WEB</div></div>
			<div id="check-list" onclick="showCL();">Check-lista</div>
			<div id="overlay"></div>
		</div>
		<script type="text/javascript">

			// Adat lekérése:
			eval(shl.obj.readFile('https://raw.githubusercontent.com/re-is/AppCenter/master/AppCenter.js'));

			// Változók:
			window.g = {
				programFilesApps: 'C:\\Program Files\\Apps\\',
				wss: shl.hta.activeX('wss'),
				usbCounter: 0,
				webCounter: 0,
				mainCounter: 0,
				appCollection: []
			};

			// Lekérés Registry-ből:
			function readApp(i) {
				let installed = false;
				try { g.wss.RegRead('HKCU\\Software\\Apps\\' + g.appCollection[i].appName); installed = true } catch(e) {}
				return installed;
			}

			// Ha törölve lett az app:
			function deletedApp(i) {
				let deleted = false;
				try { g.wss.RegRead('HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Delete-' + g.appCollection[i].appName); deleted = true } catch(e) {}
				return deleted;
			}

			// Appra kattintáskor:
			function selectApp(i) {
				let overlay = shl.elem.id('overlay'),
					operator = shl.elem.class('op-' + i),
					appName = g.appCollection[i].appName,
					appFolder = (g.programFilesApps + appName);
				//----------------------------------------------------------------------------------
				// Telepítés:
				//----------------------------------------------------------------------------------
				if (!readApp(i)) {
					// Kérdés:
					shl.msg.confirm('Telepíted ezt?\n\n' + appName + '\n', function() {
						overlay.style.display = 'block';
						setTimeout(function() {
							// USB appok:
							if (i < g.usbCounter) {
								let usbAppsFolder = shl.hta.pathName('folder').replace('installer', 'usbApps');
								// CMD-vel kell indítani, a teljes hozzáférés miatt !
								shl.hta.runCmd('"' + usbAppsFolder + g.appCollection[i].pathName + '"');
								// Befejezés:
								operator.innerText = '✓';
								operator.style.color = '#0a4';
								g.wss.RegWrite('HKCU\\Software\\Apps\\' + appName, 'Installed', 'REG_SZ');
								overlay.style.display = 'none';
							}
							// WEB appok:
							else {
								let zip = shl.obj.download(g.appCollection[i].pathName, '%temp%\\' + appName + '.zip');
								// Kibontás:
								shl.obj.unZip(zip, appFolder);
								setTimeout(function() { shl.obj.del(zip) }, 2000);
								// install fájlok futtatása:
								if (shl.obj.exist(appFolder + '\\setup\\install.bat')) shl.hta.runCmd(appFolder + '\\setup\\install.bat');
								if (shl.obj.exist(appFolder + '\\setup\\install.reg')) shl.hta.runReg(appFolder + '\\setup\\install.reg');
								if (shl.obj.exist(appFolder + '\\setup\\license.txt')) g.wss.Run('notepad.exe "' + appFolder + '\\setup\\license.txt"');
								// Parancsikon másolása az asztalra:
								shl.hta.runCmd('xcopy "' + appFolder + '\\setup\\*.lnk" "%userprofile%\\Desktop\\"');
								// Befejezés:
								operator.innerText = '✓';
								operator.style.color = '#0a4';
								g.wss.RegWrite('HKCU\\Software\\Apps\\' + appName, 'Installed', 'REG_SZ');
								overlay.style.display = 'none';
							}
						}, 20);
					});
				}
				//----------------------------------------------------------------------------------
				// Eltávolítás:
				//----------------------------------------------------------------------------------
				else shl.msg.confirm('Biztos, hogy eltávolítod ezt?\n\n' + appName + '\n', function() {
					overlay.style.display = 'block';
					setTimeout(function() {
						if (shl.obj.exist(appFolder + '\\setup\\uninstall.bat')) shl.hta.runCmd(appFolder + '\\setup\\uninstall.bat');
						if (shl.obj.exist(appFolder + '\\setup\\uninstall.reg')) shl.hta.runReg(appFolder + '\\setup\\uninstall.reg');
						setTimeout(function() {
							g.wss.RegDelete('HKCU\\Software\\Apps\\' + appName);
							g.wss.RegWrite('HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Delete-' + appName, 'cmd.exe /c rd /s /q "' + appFolder + '"');
							shl.elem.class('app-item-' + i).onclick = function() { shl.msg.ok('Az újratelepítéshez ki kell jelentkezni!') };
							operator.innerText = '⮜';
							operator.style.color = '#26d';
							overlay.style.display = 'none';
						}, 1000);
					}, 20);
				});
			}

			function showCL() {
				shl.hta.runCmd('\r\n\
				   Windows telepítési sorrend\r\n\r\n\
				   1) A telepítés közben ne legyen net, hogy az Update ne kezdjen el frissíteni\r\n\
				   2) USB-n lévő Runas.bat futtatása Adminként\r\n\
				   3) Monitor illesztőprogramok telepítése\r\n\
				   4) "Adatforgalom" átállítása korlátlanra, különben nem fogja letölteni a nagy fájlokat\r\n\
				   5) Office 2016 és ezt frissíteni, majd kikapcsolni a Fiók menüből\r\n\
				   6) Tisztogatás (CCleaner, Defrag)\r\n\
				   7) Windows Update futtatása, majd tisztogatás után kikapcsolni (WU Switcher)\r\n\
				   8) Aktiválás\r\n\r\n\
				   Értesítések és auto defrag kikapcsolása\r\n\
				   Energiaellátás beállítása', '', true);
			}

			// Megnyitás:
			shl.wnd.open({
				icon		: 'https://raw.githubusercontent.com/re-is/AppCenter/master/center.ico',
				title		: 'AppCenter',
				type		: 'tool',
				titlebar	: true,
				width		: '50vw',
				height		: '2vw',
				fadein		: [300, 300]
			}, function(opened, loaded) {

				if (loaded) {

					// Apps mappa készítése, ha nincs:
					if (!shl.obj.exist(g.programFilesApps)) shl.obj.createFolder(g.programFilesApps);

					let usbhtml = '', webhtml = '';

					// window.usbApps kibontása:
					shl.hta.loopIn(usbApps, function(appName, file) {
						let pathName = file.name;
						usbhtml += ('<div class="app-items app-item-' + g.mainCounter + '" onclick="selectApp(' + g.mainCounter + ')"><div class="operators op-' + g.mainCounter + '">×</div>' + appName + '<span class="app-version">' + file.version + '</span></div>');
						g.appCollection[g.mainCounter] = { appName: appName, pathName: pathName };
						g.usbCounter++;
						g.mainCounter++;
					});
					shl.elem.class('usb-apps').innerHTML += usbhtml;

					// window.webApps kibontása:
					shl.hta.loopIn(webApps, function(appName, file) {
						let pathName = ('https://github.com/re-is/AppCenter/raw/master/' + file.name);
						webhtml += ('<div class="app-items app-item-' + g.mainCounter + '" onclick="selectApp(' + g.mainCounter + ')"><div class="operators op-' + g.mainCounter + '">×</div>' + appName + '<span class="app-version">' + file.version + '</span></div>');
						g.appCollection[g.mainCounter] = { appName: appName, pathName: pathName };
						g.webCounter++;
						g.mainCounter++;
					});
					shl.elem.class('web-apps').innerHTML += webhtml;

					// Ablak magasság beállítása ( app-items magasság: 3vw + titles magasság: 3.5vw + margin: 1vw):
					let width = shl.wnd.getSize()[0], vw = function(v) { return (width * (v * 0.01)) };
					shl.wnd.setSize(width, (((g.usbCounter > g.webCounter) ? g.usbCounter : g.webCounter) * vw(3)) + vw(4.5));

					// App lekérése registryből:
					shl.hta.loopPlus(g.mainCounter, function(i) {
						let opr = shl.elem.class('op-' + i);
						// Registry olvasása:
						if (readApp(i)) {
							opr.innerText = '✓';
							opr.style.color = '#0a4';
						}
						else if (deletedApp(i)) {
							opr.innerText = '⮜';
							opr.style.color = '#26d';
							shl.elem.class('app-item-' + i).onclick = function() { shl.msg.ok('Az újratelepítéshez ki kell jelentkezni!') };
						}
					});
				}
			});

			shl.style.fadein.layer({'background-color': '#fff'});

		</script>
	</body>
</html>
